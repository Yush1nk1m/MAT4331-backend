@startuml Event234

!$ICONURL = "https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v3.0.0/icons"
!include $ICONURL/common.puml
!include $ICONURL/devicons2/nestjs_original.puml
!include $ICONURL/devicons2/fastapi.puml
!include $ICONURL/devicons2/rabbitmq_original.puml
!include $ICONURL/devicons/mongodb.puml
!include $ICONURL/devicons2/postgresql.puml

skinparam defaultTextAlignment center
skinparam linetype ortho
skinparam participantFontAlignment center

DEV2_NESTJS_ORIGINAL(MainService, "\nMain Service", participant, #E0234E) #White
DEV2_POSTGRESQL(PostgreSQL, "\nPostgreSQL", participant, #336791) #White
DEV2_NESTJS_ORIGINAL(CrawlerService, "\nCrawler Service", participant, #E0234E) #White
DEV_MONGODB(MongoDB, "\nMongoDB", participant, #47A248) #White
DEV2_FASTAPI(AIService, "\nAI Service", participant, #009688) #White
DEV2_RABBITMQ_ORIGINAL(RabbitMQ, "\nRabbitMQ", participant, #FF6600) #White

MainService -> PostgreSQL: Find games not predicted & not canceled
PostgreSQL -> MainService: Found games
MainService -> RabbitMQ: [E-02] Publish Game.Aggregate.Statistics event and send game's id
RabbitMQ -> CrawlerService: [E-02] Deliver Game.Aggregate.Statistics event and each game's id
CrawlerService -> MongoDB: Find each team's recent statistics
MongoDB -> CrawlerService: Found statistics
CrawlerService -> RabbitMQ: [E-03] Publish Game.Predict.Score event and send each teams' statistics
RabbitMQ -> AIService: [E-03] Deliver Game.Predict.Score event and statistics
AIService -> AIService: Predict each team's score
AIService -> RabbitMQ: [E-04] Publish Game.Save.Prediction event and send each team's predicted score
RabbitMQ -> MainService: [E-04] Deliver Game.Save.Prediction event and each team's predicted score
MainService -> PostgreSQL: Save predicted scores

@enduml
